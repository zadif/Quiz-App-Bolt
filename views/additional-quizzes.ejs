<!-- Hero Section with Image -->
<section class="hero-section">
  <div class="container">
    <div class="row align-items-center">
      <div class="col-md-6 hero-text">
        <h1 class="display-4 fw-bold">Additional Quiz Collections</h1>
        <p class="lead">
          Explore specialized and custom quizzes designed to challenge your
          knowledge across various domains.
        </p>
      </div>
    </div>
  </div>
</section>

<!-- Custom Quizzes Section -->
<section class="py-5">
  <div class="container">
    <div class="row mb-4">
      <div class="col-lg-8 mx-auto text-center">
        <h2 class="mb-3">Custom Question Banks</h2>
        <p class="lead">Take quizzes from additional question collections</p>
        <button class="btn btn-outline-primary mt-2" id="refreshQuizButton">
          <i class="fas fa-sync-alt me-2"></i>Refresh Quiz List
        </button>
      </div>
    </div>

    <div class="row" id="quizContainer">
      <% if (customCategories && customCategories.length > 0) { %> <%
      customCategories.forEach(category => { %>
      <div class="col-md-6 col-lg-4 mb-4">
        <div class="card category-card h-100">
          <div class="card-body text-center">
            <div class="d-flex justify-content-center mb-3">
              <div
                class="category-icon bg-<%= category.color || 'info' %> text-white"
              >
                <i class="fas <%= category.icon || 'fa-file-alt' %> fa-2x"></i>
              </div>
            </div>
            <h5 class="card-title"><%= category.title %></h5>
            <p class="card-text">
              <%= category.description || 'Custom quiz questions' %>
            </p>
            <a
              href="/quiz/custom/<%= category.filename.replace('.json', '') %>"
              class="btn btn-primary quiz-start-btn"
            >
              Start Quiz
            </a>
          </div>
        </div>
      </div>
      <% }); %> <% } else { %>
      <div class="col-12 text-center">
        <div class="alert alert-info">
          <p>
            No custom quizzes found. Add JSON files to the "data" directory to
            create custom quizzes.
          </p>
        </div>
      </div>
      <% } %>
    </div>
  </div>
</section>

<script>
  // Fix for dark mode toggle on this page
  function applyAdditionalQuizzesDarkMode() {
    // Check dark mode status from localStorage
    const darkModeEnabled = localStorage.getItem("darkMode") === "enabled";

    // Apply or remove dark mode class based on status
    if (darkModeEnabled) {
      document.documentElement.classList.add("dark-mode");
      document.body.classList.add("dark-mode");

      // Apply inline styles for better compatibility
      document.querySelectorAll(".card, .list-group-item").forEach((el) => {
        el.style.backgroundColor = "#333";
        el.style.color = "#f0f0f0";
        el.style.borderColor = "#444";
      });

      document
        .querySelectorAll("h1, h2, h3, h4, h5, h6, p, .card-title, .card-text")
        .forEach((el) => {
          el.style.color = "#f0f0f0";
        });

      // Fix button colors in dark mode
      document.querySelectorAll(".btn-outline-primary").forEach((el) => {
        el.style.color = "#6ea8fe";
        el.style.borderColor = "#6ea8fe";
      });
    } else {
      document.documentElement.classList.remove("dark-mode");
      document.body.classList.remove("dark-mode");

      // Reset inline styles
      document
        .querySelectorAll(
          ".card, .list-group-item, h1, h2, h3, h4, h5, h6, p, .card-title, .card-text, .btn-outline-primary"
        )
        .forEach((el) => {
          el.style.backgroundColor = "";
          el.style.color = "";
          el.style.borderColor = "";
        });
    }
  }

  // Function to refresh the quiz list
  function refreshCustomQuizzes() {
    // Show loading indicator
    const container = document.getElementById("quizContainer");
    container.innerHTML =
      '<div class="col-12 text-center"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div></div>';

    // Reload the page to get fresh data
    window.location.reload();
  }

  // Initialize on page load
  document.addEventListener("DOMContentLoaded", function () {
    // Apply dark mode settings
    applyAdditionalQuizzesDarkMode();

    // Attach refresh button functionality
    const refreshBtn = document.getElementById("refreshQuizButton");
    if (refreshBtn) {
      refreshBtn.addEventListener("click", refreshCustomQuizzes);
    }

    // Handle dark mode toggle button clicks
    const darkModeToggle = document.getElementById("darkModeToggle");
    if (darkModeToggle) {
      darkModeToggle.addEventListener("click", function () {
        // Toggle dark mode in localStorage
        const isDarkMode =
          document.documentElement.classList.contains("dark-mode");
        localStorage.setItem("darkMode", isDarkMode ? "disabled" : "enabled");

        // Apply changes
        applyAdditionalQuizzesDarkMode();
      });
    }
  });

  // Global listener for dark mode toggle on this page
  document.addEventListener("click", function (e) {
    if (
      e.target.id === "darkModeToggle" ||
      (e.target.closest && e.target.closest("#darkModeToggle"))
    ) {
      setTimeout(applyAdditionalQuizzesDarkMode, 10);
    }
  });

  // Listen for localStorage changes (if dark mode is toggled in another tab)
  window.addEventListener("storage", function (e) {
    if (e.key === "darkMode") {
      setTimeout(applyAdditionalQuizzesDarkMode, 10);
    }
  });
</script>
